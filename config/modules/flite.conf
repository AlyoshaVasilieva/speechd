
# See Festival commands comments for information
FliteMaxChunkLength    500
FliteDelimiters        ".?!;"

# -- AUDIO OUTPUT --

# Chooses between three possible sound output systems:
#       "oss"   - Open Sound System
#       "alsa"  - Advanced Linux Sound System
#       "nas"   - Network Audio System
#       "pulse" - PulseAudio
# ALSA is default and recommended. The recent implementations
# support mixing of multiple streams. OSS is only provided
# for compatibility with architectures that do not include ALSA.
# NAS is an audio server with higher level of control over
# your audio stream, with the possibility to stream your audio
# over the network to a different computer and other advanced
# features. (The NAS backend is not very well tested however.)
# PulseAudio is a sound server for POSIX and WIN32 systems. 
#

FliteAudioOutputMethod "alsa"

# What OSS device to use when Open Sound System was
# chosen for the audio output.

#FliteOSSDevice "/dev/dsp"

# Route to the Network Audio System server when NAS
# was chosen for the audio output. Note that NAS
# server doesn't need to run on your machine,
# you can use it also over network (for instance
# when working on remote machines).

#FliteNASServer "tcp/localhost:5450"

# -- PulseAudio parameters --

FlitePulseServer "default"

# Maximum length of the buffer

FlitePulseMaxLength 132300

# Target length of the buffer
# The server tries to assure that at least FlitePulseTargetLength
# bytes are always available in the buffer

FlitePulseTargetLength 4410

# Pre-buffering
# The server does not start with playback before at least 
# FlitePulsePrebuffering bytes are available in the buffer

FlitePulsePreBuffering 2200

# Minimum request
# The server does not request less than FlitePulseMinRequest bytes
# from the client, instead waits until the buffer is free enough to
# request more bytes at once

FlitePulseMinRequest 880

# Debug turns debugging on or off
# See speechd.conf for information where debugging information is stored

# Debug 0


# DebugFile specifies the file where the debugging information
# should be stored (note that the log is overwritten each time
# the module starts)
# DebugFile "/tmp/debug-flite"
