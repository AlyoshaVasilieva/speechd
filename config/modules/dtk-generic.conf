# DECTalk software output module is based on the generic plugin for Speech
# Dispatcher. It means there is no C code written explicitly for
# this plugin, all the specifics are handled in this configuration
# and we call a simple command line client to perform the actual
# synthesis. Note that this is not an optimal solution, but
# it's reported to work.
#
# Please note that DECTalk software is currently *not* Free Software.
# You might want to look at Festival instead.

# GenericExecuteSynth is the shell command that should be
# executed in order to say some message. This command must
# stop saying the message on SIGKILL, otherwise it's useless.
# You can use the variables $LANG, $VOICE, $PITCH and $RATE
# which will be substituted for the appropriate value (you
# can modify this value, see other parameters).
# The command can be split into more lines, if necessary, using '\'.
# NOTE:
# By default, the DECTalk's command-line speech generator is
# called `say'. However, speech dispatcher also installs a program of the
# same name, so I have renamed DECTalk's say program to "dtk-say". If yours
# goes by a different name, please change the command below.
GenericExecuteSynth \
"dtk-say -a \"[:name $VOICE] [:dv ap $PITCH] [:rate $RATE] $DATA\""

# GenericStripPunctChars is a list (enclosed in doublequotes) of
# all the characters that should be replaced by whitespaces in
# order not to be badly handled by the output module or misinterpreted
# by shell.
# We need to strip `[' and `]', as these are DECTalk's
# command characters.
GenericStripPunctChars  "[]"

# AddVoice specifies which $VOICE string should be assigned to
# each language and symbolic voice name. All the voices you want
# to use must be specified here.
# NOTE:
# There is a multilingual version of DECTalk software, however I
# do not have it. Thus, only the US English voices are defined here.
# If you know about the other languages, please let us know on
# <speechd@freebsoft.org>

AddVoice	"en"	"MALE1"		"paul"
AddVoice	"en"	"MALE2"		"harry"
AddVoice	"en"	"MALE3"		"dennis"
AddVoice	"en"	"FEMALE1" 	"betty"
AddVoice	"en"	"FEMALE2"	"ursula"
AddVoice	"en"	"FEMALE3"	"wendy"
AddVoice	"en"	"CHILD_MALE"	"kit"

# These parameters set _rate_ and _pitch_ conversion. This is
# part of the core of the definition of this generic output
# module for this concrete synthesizer, it's not intended to
# be modified by common users.
# The resulting rate (or pitch) has the form:
# 	(speechd_rate * GenericRateMultiply) + GenericRateAdd
# while speechd_rate is a value between -100 (lowest) and +100 (highest)
# You have to define some meaningful conversion for each synthesizer
# NOTE:
# Because DECTalk cannot accept float values, we must force them to be
# integers.

GenericRateForceInteger 1
GenericPitchForceInteger 1

GenericRateAdd 338
GenericPitchAdd	225

# (These values are multiplied by 100, because DotConf currently
# doesn't support floats. So you can write 0.85 as 85 and so on.)

GenericRateMultiply 262
GenericPitchMultiply 175 

# Debug turns debugging on or off
# Debug 0

# DebugFile specifies the file where the debugging information
# should be stored (note that the log is overwritten each time
# the module starts)
# DebugFile "/tmp/debug-dtk-generic"
